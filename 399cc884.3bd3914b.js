(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{135:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),c=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(n),p=r,b=m["".concat(o,".").concat(p)]||m[p]||u[p]||i;return n?a.a.createElement(b,l(l({ref:t},d),{},{components:n})):a.a.createElement(b,l({ref:t},d))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},207:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/overview-example-432e1b170db30fea372bee23ed8c62f4.svg"},82:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return c}));var r=n(3),a=n(7),i=(n(0),n(135)),o={title:"Introduktion",slug:"/"},l={unversionedId:"intro-01-overview",id:"intro-01-overview",isDocsHomePage:!1,title:"Introduktion",description:"Tanken med MRC \xe4r att skapa ett flexibelt och decentraliserat s\xe4tt att styra modellj\xe4rnv\xe4gar. Inspirationen kommer fr\xe5n IoT (Internet of Things) d\xe4r alla saker ska kunna kommunicera med varandra, men i MRC sker det under mer kontrollerade former s\xe5 man s\xe4kert vet att allting fungerar.",source:"@site/docs/intro-01-overview.md",slug:"/",permalink:"/docs/",editUrl:"https://github.com/modelrailcontrol/MRC-documentation/blob/master/docs/intro-01-overview.md",version:"current",sidebar:"someSidebar",next:{title:"Contribute to MRC",permalink:"/docs/intro-contribute"}},s=[{value:"Principen",id:"principen",children:[]},{value:"Meddelandeserver",id:"meddelandeserver",children:[]},{value:"\xd6vriga enheter",id:"\xf6vriga-enheter",children:[]}],d={rightToc:s};function c(e){var t=e.components,o=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Tanken med MRC \xe4r att skapa ett flexibelt och decentraliserat s\xe4tt att styra modellj\xe4rnv\xe4gar. Inspirationen kommer fr\xe5n IoT (Internet of Things) d\xe4r alla saker ska kunna kommunicera med varandra, men i MRC sker det under mer kontrollerade former s\xe5 man s\xe4kert vet att allting fungerar."),Object(i.b)("h2",{id:"principen"},"Principen"),Object(i.b)("p",null,"Principen \xe4r att ha m\xe5nga sm\xe5, specialiserade enheter som utf\xf6r en enstaka uppgift helt sj\xe4lvst\xe4ndigt. De kan f\xe5 kommandon utifr\xe5n och skicka status eller kommandon till andra enheter."),Object(i.b)("p",null,Object(i.b)("img",{alt:"MRC princip",src:n(207).default})),Object(i.b)("p",null,'Genom att ha "intelligensen" sittande i varje enskild enhet, beh\xf6ver man inte ha n\xe5gon st\xf6rre cental dator som sk\xf6ter systemet och inte heller n\xe5gon avancerad kommunikation.'),Object(i.b)("p",null,"MRC utg\xe5r fr\xe5n id\xe9n om att varje enhet i princip bara har en funktion, vilket ger det stor flexibilitet, valfrihet och skalbarhet. Det blir relativt l\xe4tt att g\xf6ra \xe4ndringar b\xe5de n\xe4r det g\xe4ller fysiska enheter och hur de interagerar med varanda. "),Object(i.b)("h2",{id:"meddelandeserver"},"Meddelandeserver"),Object(i.b)("p",null,"Det enda som alltid m\xe5ste finnas i systemet \xe4r en central meddelandeserver (s.k. MQTT-broker). Det \xe4r via den som all kommunikation sker mellan enheterna i systemet. Meddelandeservern h\xe5ller reda p\xe5 vilka enheter som finns i systemet och ser till att meddelande skickas r\xe4tt mellan enheter."),Object(i.b)("p",null,"Den centrala meddelandeservern \xe4r en viktig del i MRC och till den b\xf6r man anv\xe4nda en lite mer kapabel dator. Ett f\xf6rslag \xe4r att anv\xe4nda Raspberry Pi med t.ex. ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://mosquitto.org/"}),"Mosquitto")," installerat."),Object(i.b)("h2",{id:"\xf6vriga-enheter"},"\xd6vriga enheter"),Object(i.b)("p",null,"F\xf6r \xf6vrigt kan man ha vilka typer av enheter som helst i systemet. Det \xe4r egentligen upp till den som skapar enheten att best\xe4mma vad den g\xf6r. Det viktiga med MRC \xe4r \xe4nd\xe5 inte vad olika enheter g\xf6r, utan att de kommunicerar med varandra p\xe5 ett reglerat s\xe4tt. "),Object(i.b)("p",null,"Genom att anv\xe4nda sm\xe5, billiga kretskortsdatorer (l\xe4s Arduino) kan man relativt enkelt bygga sm\xe5 enheter som \xe4nd\xe5 har nog med kapacitet att utf\xf6ra sina uppgifter. Enda kraven p\xe5 en enhet \xe4r att den ska kunna kommunicera med andra och att den ska f\xf6lja MRC Konventionen f\xf6r ",Object(i.b)("em",{parentName:"p"},"hur")," den ska kommunicera - resten best\xe4mmer du sj\xe4lv!"))}c.isMDXComponent=!0}}]);